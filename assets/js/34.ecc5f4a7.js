(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{278:function(e,t,n){"use strict";n.r(t);var s=n(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"从-ecma-标准来解读-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从-ecma-标准来解读-this"}},[e._v("#")]),e._v(" 从 ECMA 标准来解读 this")]),e._v(" "),n("p",[e._v("本文基于 ECMAScript 9th Edition / June 2018")]),e._v(" "),n("p",[e._v("读书先看目录，来到第十二章 ECMAScript Language: Expressions")]),e._v(" "),n("h2",{attrs:{id:"_12-2-2-章-the-this-keyword"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-2-章-the-this-keyword"}},[e._v("#")]),e._v(" 12.2.2 章 The this Keyword")]),e._v(" "),n("blockquote",[n("p",[e._v("Runtime Semantics: Evaluation"),n("br"),e._v(" "),n("em",[e._v("PrimaryExpression")]),e._v(" : "),n("strong",[e._v("This")])])]),e._v(" "),n("p",[e._v("运行时语义:求值"),n("br"),e._v("\n主要描述符：This")]),e._v(" "),n("blockquote",[n("p",[e._v("Return ? "),n("code",[e._v("ResolveThisBinding()")]),e._v(".")])]),e._v(" "),n("p",[e._v("回到目录 找到 ResolveThisBinding()位置")]),e._v(" "),n("h2",{attrs:{id:"_8-3-4-章-resolvethisbinding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-4-章-resolvethisbinding"}},[e._v("#")]),e._v(" 8.3.4 章 ResolveThisBinding()")]),e._v(" "),n("blockquote",[n("p",[e._v("The abstract operation ResolveThisBinding determines the binding of the keyword "),n("strong",[e._v("this")]),e._v(" using the LexicalEnvironment of the running execution context.ResolveThisBinding performs the following steps:")]),e._v(" "),n("ol",[n("li",[e._v("Let envRec be "),n("code",[e._v("GetThisEnvironment()")])]),e._v(" "),n("li",[e._v("Return ? envRec."),n("code",[e._v("GetThisBinding()")])])])]),e._v(" "),n("p",[e._v("envRec=environment running execution context")]),e._v(" "),n("p",[e._v("虚拟运算 ResolveThisBinding()决定"),n("strong",[e._v("this")]),e._v("用运行中的执行上下文的词法环境。步骤如下")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("设置 envRec 8.3.3 章 GetThisEnvironment()")]),e._v(" "),n("h2",{attrs:{id:"_8-3-3-章-getthisenvironment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-3-章-getthisenvironment"}},[e._v("#")]),e._v(" 8.3.3 章 GetThisEnvironment()")]),e._v(" "),n("blockquote",[n("ol",[n("li",[e._v("Let lex be the running execution context's LexicalEnvironment")]),e._v(" "),n("li",[e._v("Repeat,")])])]),e._v(" "),n("pre",[n("code",[e._v("a. Let envRec be lex's EnvironmentRecord\nb. Let exists be envRec.HasThisBinding().\nc. If exists is true,return envRec.\nd. Let outer be the value of lex's outer environment reference\ne. Assert:outer is not null\nf. Set lex to outer.\n")])]),e._v(" "),n("p",[n("strong",[e._v("The loop step2 will alwats terminate because the list of environments always ends with the global environment which has "),n("em",[e._v("this")])])]),e._v(" "),n("ol",[n("li",[e._v("let lex=运行中的执行上下文的词法环境")]),e._v(" "),n("li",[e._v("重复以下步骤，直到全局环境或者找到 this 为止。")])]),e._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" envRec "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" lex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Environment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" exists "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" envRec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("HashThisBinding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("exists"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" envRec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" outer "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" lex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("outer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("outer "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    lex "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" outer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h3",{attrs:{id:"environment-record-环境记录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#environment-record-环境记录"}},[e._v("#")]),e._v(" Environment Record 环境记录")]),e._v(" "),n("p",[e._v("根据目录，找到第 8 章 Executable Code and Execution Contexts 执行代码和执行上下文，Environment Record 在 8.1.1 章")]),e._v(" "),n("h4",{attrs:{id:"_8-1-lexical-environments-词法环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-lexical-environments-词法环境"}},[e._v("#")]),e._v(" 8.1 Lexical Environments 词法环境")]),e._v(" "),n("p",[e._v("Lexical Environment 由 Environment Record 和一个可能为空的外层词法环境 reference 组成。它通常和一些特定的句法结构相关,例如")]),e._v(" "),n("ul",[n("li",[e._v("Function Declaration 函数声明")]),e._v(" "),n("li",[e._v("BlockStatement 代码块")]),e._v(" "),n("li",[e._v("Catch (TryStatement)")])]),e._v(" "),n("p",[e._v("当这些代码执行时 a new Lexical Environment 就会被创建。")]),e._v(" "),n("p",[e._v("Environment Record 记录由词法环境在作用域内创建的标识符的集合，被称为词法环境的环境记录。")]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("global environment")]),e._v(":全局环境，没有外层环境，outer reference 为 null。全局环境可能或预填充一些包含全局对象的标识符集合。当代码被执行，额外属性可能会添加到全局对象，初始属性可能会被修改。")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("module environment")]),e._v(":包括模块的顶层声明集合，也包括 Module 引入的集合。")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("function environment")]),e._v(" 对应函数调用。函数环境可能会创建新的 this 集合，也会捕捉必要的状态支持 super 方法调用。")])])])]),e._v(" "),n("li",[n("p",[e._v("返回 envRec.GetThisBinding")])])]),e._v(" "),n("p",[e._v("回到目录查找 GetThisBinding，结果如下")]),e._v(" "),n("ol",[n("li",[e._v("8.1.1.3 章 Function Environment Records 8.1.1.3.4 节\n"),n("h3",{attrs:{id:"function-environment-records"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#function-environment-records"}},[e._v("#")]),e._v(" Function Environment Records")]),e._v(" "),n("pre",[n("code",[e._v("函数环境记录用来表示函数的顶级作用域。\n如果函数不是箭头函数，提供this。\n如果函数不是箭头函数且用到*super*，它的函数环境记录包括执行了super()函数调用的情况。\n")])]),e._v(" "),n("h3",{attrs:{id:"getthisbinding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getthisbinding"}},[e._v("#")]),e._v(" GetThisBinding()")]),e._v(" "),n("pre",[n("code",[e._v("if envRec.[[ThisBindingStatus]]=='lexical'，该函数是箭头函数，不提供this\nif envRec.[[ThisBindingStatus]]=='uninitialized',抛出Reference error,\nreturn envRec.[[ThisValue]]\n")])])]),e._v(" "),n("li",[e._v("8.1.1.4 章 Global Environment Records 8.1.1.4.11 节\n"),n("h3",{attrs:{id:"global-environment-records"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#global-environment-records"}},[e._v("#")]),e._v(" Global Environment Records")]),e._v(" "),n("pre",[n("code",[e._v("全局环境记录用来表示最外层作用域，被公共领域中运行的的所有脚本元素共享。它提供了内置全局对象，全局对象的属性集合和所有顶层声明。\n")])]),e._v(" "),n("h3",{attrs:{id:"getthisbinding-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getthisbinding-2"}},[e._v("#")]),e._v(" GetThisBinding()")]),e._v(" "),n("pre",[n("code",[e._v("此时envRec是全局环境记录，返回envRec.[[GlobalThisValue]]\n")])])]),e._v(" "),n("li",[e._v("8.1.1.5 章 Module Environment Records 8.1.1.5.4 节\nreturn undefined")])])])}),[],!1,null,null,null);t.default=r.exports}}]);